/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundary;

import com.mysql.jdbc.StringUtils;
import common.Constants;
import controller.BookController;
import controller.CardController;
import controller.RegisterNewBookController;
import controller.RegisterNewCopyController;
import controller.SearchBookController;
import controller.ShowBookBorrowingController;
import controller.UpdateBookInforController;
import controller.UpdateBorrowedBookInfoController;
import controller.UpdateCopyInforController;
import entity.Book;
import entity.Card;
import entity.Copy;
import entity.Registration;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.lang.NullPointerException;
import java.sql.Date;
import javax.swing.JTable;

/**
 *
 * @author thanglongsp
 */
public class LibrarianUI extends javax.swing.JFrame {

    Registration brBook;
    Book mBook;
    Copy mCopy;
    List<Registration> brBooks;
    List<Book> mBooks;
    List<Copy> mCopies;
    RegisterNewBookController registerNewBookController;
    RegisterNewCopyController registerNewCopyController;
    UpdateBookInforController updateBookInforController;
    UpdateCopyInforController updateCopyInforController;
    ShowBookBorrowingController showBookBorrowingController;
    UpdateBorrowedBookInfoController updateBorrowedBookInfoController;
    SearchBookController searchBookController;
    BookController bookController;
    
    private Card card;
    private int cardId;
    private String name;
    private String activatedCode;
    private Date expiredDate;
    private Date birthday;
    CardController cardController;
    
    /**
     * Creates new form LibrarianUI
     *
     * @throws SQLException           neu co loi khi tuong tac voi db
     * @throws ClassNotFoundException neu load class trong connectDb khong thanh cong
     */
    public LibrarianUI() throws SQLException, ClassNotFoundException {
        initComponents();
        mBook = new Book();
        mCopy = new Copy();
        mBooks = new ArrayList<>();
        mCopies = new ArrayList<>();
        registerNewBookController = new RegisterNewBookController();
        registerNewCopyController = new RegisterNewCopyController();
        updateBookInforController = new UpdateBookInforController();
        updateCopyInforController = new UpdateCopyInforController();
        updateBorrowedBookInfoController = new UpdateBorrowedBookInfoController();
        searchBookController = new SearchBookController();
        bookController = new BookController();
        cardController = new CardController();
        
        showAllBooks();
        showAllCopies();
        showAllBorrowed();
//        setUsable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane4 = new javax.swing.JTabbedPane();
        jMenuItem1 = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        jTabbedPane8 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTitle1 = new javax.swing.JTextField();
        jAuthors1 = new javax.swing.JTextField();
        jPublisher1 = new javax.swing.JTextField();
        jOK1 = new javax.swing.JButton();
        jCancel1 = new javax.swing.JButton();
        jLabelTitle1 = new javax.swing.JLabel();
        jLabelPublisher1 = new javax.swing.JLabel();
        jLabelAuthors1 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableForm1 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jIsbn1 = new javax.swing.JTextField();
        jLabelIsbn1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jBookNumber1 = new javax.swing.JTextField();
        jLabelNumber1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableForm3 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPublisher3 = new javax.swing.JTextField();
        jAuthors3 = new javax.swing.JTextField();
        jTitle3 = new javax.swing.JTextField();
        jCancel3 = new javax.swing.JButton();
        jOk3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jNumber3 = new javax.swing.JTextField();
        jlable3 = new javax.swing.JLabel();
        jIsbn3 = new javax.swing.JTextField();
        jLabelNumber3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableForm4 = new javax.swing.JTable();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jNumber4 = new javax.swing.JTextField();
        jPrice4 = new javax.swing.JTextField();
        jCancel41 = new javax.swing.JButton();
        jOk4 = new javax.swing.JButton();
        jLabelPrice4 = new javax.swing.JLabel();
        jLabelStatus4 = new javax.swing.JLabel();
        jLabelType4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSequenceNumber4 = new javax.swing.JTextField();
        jStatus4 = new javax.swing.JComboBox<>();
        jType4 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jError1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jNumber2 = new javax.swing.JTextField();
        jLabelNumberCopies2 = new javax.swing.JLabel();
        jCancel2 = new javax.swing.JButton();
        jOk21 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableForm2 = new javax.swing.JTable();
        jNumberCopies2 = new javax.swing.JTextField();
        jLabelNumber2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPrice2 = new javax.swing.JTextField();
        jLabelPrice2 = new javax.swing.JLabel();
        jType2 = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        inpCardId = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        inpName = new javax.swing.JTextField();
        inpActivationCode = new javax.swing.JTextField();
        inpExpiredDate = new javax.swing.JTextField();
        inpBirthday = new javax.swing.JTextField();
        btnDeactivate = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblMsg = new javax.swing.JLabel();
        lblCardIdMsg = new javax.swing.JLabel();
        lblCodeMsg = new javax.swing.JLabel();
        lblExpiredDateMsg = new javax.swing.JLabel();
        lblBirthdayMsg = new javax.swing.JLabel();
        lblNameMsg = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        card_id = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        search_card = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        user_id = new javax.swing.JTextField();
        ms = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Librarian panel");

        jTabbedPane8.setForeground(new java.awt.Color(51, 51, 255));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Number", "Title", "Authors", "ISBN", "Publisher"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jTextField3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField3)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane8.addTab("Search ", jPanel7);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("+ Title                    :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("+ Publisher            : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("+ Authors               :");

        jAuthors1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAuthors1ActionPerformed(evt);
            }
        });

        jPublisher1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPublisher1ActionPerformed(evt);
            }
        });

        jOK1.setBackground(new java.awt.Color(0, 204, 0));
        jOK1.setText("OK");
        jOK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOK1ActionPerformed(evt);
            }
        });

        jCancel1.setText("Cancel");
        jCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancel1ActionPerformed(evt);
            }
        });

        jLabelTitle1.setForeground(new java.awt.Color(255, 0, 51));
        jLabelTitle1.setText("*");

        jLabelPublisher1.setForeground(new java.awt.Color(255, 0, 51));
        jLabelPublisher1.setText("*");

        jLabelAuthors1.setForeground(new java.awt.Color(255, 0, 51));
        jLabelAuthors1.setText("*");

        jTableForm1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableForm1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTableForm1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane6.setViewportView(jTableForm1);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 255));
        jLabel21.setText("+ ISBN                      :");

        jLabelIsbn1.setBackground(new java.awt.Color(255, 51, 51));
        jLabelIsbn1.setForeground(new java.awt.Color(255, 0, 51));
        jLabelIsbn1.setText("*");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 255));
        jLabel22.setText("+ Book Number    :");

        jBookNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBookNumber1ActionPerformed(evt);
            }
        });

        jLabelNumber1.setForeground(new java.awt.Color(255, 51, 51));
        jLabelNumber1.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBookNumber1)
                            .addComponent(jTitle1)
                            .addComponent(jAuthors1)
                            .addComponent(jPublisher1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jCancel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jOK1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jIsbn1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelIsbn1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(jLabelAuthors1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelPublisher1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelNumber1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(314, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jBookNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNumber1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTitle1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabelPublisher1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPublisher1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAuthors1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAuthors1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jIsbn1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIsbn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCancel1)
                    .addComponent(jOK1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(44, 44, 44))
        );

        jTabbedPane8.addTab("Register New Book", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTableForm3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableForm3);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 204));
        jLabel13.setText("+ Title                                :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 204));
        jLabel14.setText("+ Authors                          :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 204));
        jLabel15.setText("+ Publisher                        :");

        jPublisher3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPublisher3ActionPerformed(evt);
            }
        });

        jAuthors3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAuthors3ActionPerformed(evt);
            }
        });

        jTitle3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTitle3ActionPerformed(evt);
            }
        });

        jCancel3.setText("Cancel");
        jCancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancel3ActionPerformed(evt);
            }
        });

        jOk3.setBackground(new java.awt.Color(102, 255, 102));
        jOk3.setText("OK");
        jOk3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOk3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 255));
        jLabel9.setText("+ Book number              :");

        jNumber3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNumber3ActionPerformed(evt);
            }
        });

        jlable3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlable3.setForeground(new java.awt.Color(0, 0, 255));
        jlable3.setText("+ ISBN                                  :");

        jIsbn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jIsbn3ActionPerformed(evt);
            }
        });

        jLabelNumber3.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jNumber3, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlable3)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addComponent(jLabel13))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPublisher3, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(jAuthors3, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jCancel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jOk3))
                            .addComponent(jIsbn3)
                            .addComponent(jTitle3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelNumber3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jNumber3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(jLabelNumber3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAuthors3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jPublisher3)))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlable3)
                    .addComponent(jIsbn3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCancel3)
                    .addComponent(jOk3))
                .addGap(38, 38, 38))
        );

        jTabbedPane8.addTab("Update Book", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jTableForm4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableForm4);

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(51, 51, 255));
        jLabel64.setText("+ Book Number    ");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(51, 51, 255));
        jLabel65.setText("+ Price                       ");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(51, 51, 255));
        jLabel66.setText("+ Status                    ");

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(51, 51, 255));
        jLabel67.setText("+ Type of copy           ");

        jPrice4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrice4ActionPerformed(evt);
            }
        });
        jPrice4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPrice4KeyTyped(evt);
            }
        });

        jCancel41.setText("Cancel");
        jCancel41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancel41ActionPerformed(evt);
            }
        });

        jOk4.setBackground(new java.awt.Color(102, 255, 102));
        jOk4.setText("Ok");
        jOk4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOk4ActionPerformed(evt);
            }
        });

        jLabelPrice4.setText("*");

        jLabelStatus4.setText("*");

        jLabelType4.setText("*");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("+ SequenceNumber");

        jStatus4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Borrowed", "Lent", "Referenced" }));
        jStatus4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStatus4ActionPerformed(evt);
            }
        });

        jType4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "reference", "borrowable" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6)
                    .addComponent(jLabel67))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCancel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                        .addComponent(jOk4))
                    .addComponent(jPrice4)
                    .addComponent(jSequenceNumber4)
                    .addComponent(jStatus4, 0, 233, Short.MAX_VALUE)
                    .addComponent(jType4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jNumber4))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelPrice4, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jLabelStatus4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelType4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNumber4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSequenceNumber4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPrice4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65)
                    .addComponent(jLabelPrice4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(jLabelStatus4)
                    .addComponent(jStatus4, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jType4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67)
                    .addComponent(jLabelType4))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCancel41)
                    .addComponent(jOk4))
                .addGap(0, 138, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Update Copy", jPanel4);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sequence Number", "Book Number", "Price", "Status", "Type Of Copy"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel7.setText("Sequence Number");

        jLabel12.setText("Book Number");

        jButton11.setBackground(new java.awt.Color(0, 255, 0));
        jButton11.setText("OK");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Borrowed", "Lent", "Referenced" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jError1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setText("Status");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, 155, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jError1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jError1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 428, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Update Borrowed Books' Info", jPanel5);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 255));
        jLabel8.setText("+ Book number                :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("+ Number Copies             :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 255));
        jLabel11.setText("+ Type of copy                 :");

        jLabelNumberCopies2.setForeground(new java.awt.Color(255, 0, 51));
        jLabelNumberCopies2.setText("*");

        jCancel2.setText("Cancel");
        jCancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancel2ActionPerformed(evt);
            }
        });

        jOk21.setBackground(new java.awt.Color(102, 255, 0));
        jOk21.setText("OK");
        jOk21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOk21ActionPerformed(evt);
            }
        });

        jTableForm2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTableForm2);

        jNumberCopies2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNumberCopies2ActionPerformed(evt);
            }
        });
        jNumberCopies2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNumberCopies2KeyTyped(evt);
            }
        });

        jLabelNumber2.setForeground(new java.awt.Color(255, 0, 0));
        jLabelNumber2.setText("*");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("+ Price                                  :");

        jPrice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrice2ActionPerformed(evt);
            }
        });
        jPrice2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPrice2KeyTyped(evt);
            }
        });

        jLabelPrice2.setText("*");

        jType2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "reference", "borrowable" }));
        jType2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jType2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jCancel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                                .addComponent(jOk21))
                            .addComponent(jNumberCopies2)
                            .addComponent(jPrice2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jType2, 0, 261, Short.MAX_VALUE)
                            .addComponent(jNumber2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelPrice2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                    .addComponent(jLabelNumberCopies2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelNumber2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(100, 100, 100))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNumber2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNumber2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jNumberCopies2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelNumberCopies2))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelPrice2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCancel2)
                    .addComponent(jOk21))
                .addGap(32, 32, 32))
        );

        jTabbedPane8.addTab("Register New Copy", jPanel2);

        inpCardId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpCardIdActionPerformed(evt);
            }
        });

        jLabel24.setText("Card ID");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Update");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel25.setText("Name");

        jLabel26.setText("Expired Date");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        inpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpNameActionPerformed(evt);
            }
        });

        inpActivationCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpActivationCodeActionPerformed(evt);
            }
        });

        inpBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpBirthdayActionPerformed(evt);
            }
        });

        btnDeactivate.setText("Deactivate");
        btnDeactivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeactivateActionPerformed(evt);
            }
        });

        jLabel18.setText("Activation Code");

        jLabel19.setText("Birthday");

        lblCardIdMsg.setForeground(new java.awt.Color(255, 0, 0));

        lblCodeMsg.setForeground(new java.awt.Color(255, 0, 0));

        lblExpiredDateMsg.setForeground(new java.awt.Color(255, 0, 0));

        lblBirthdayMsg.setForeground(new java.awt.Color(255, 0, 0));

        lblNameMsg.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeactivate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(710, 710, 710))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inpName)
                            .addComponent(inpExpiredDate)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblExpiredDateMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel26)
                                    .addComponent(lblCardIdMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25)
                                    .addComponent(lblNameMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(85, 85, 85))
                            .addComponent(inpCardId)
                            .addComponent(lblMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblBirthdayMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(inpBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(inpActivationCode, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(lblCodeMsg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(inpCardId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)))
                .addGap(11, 11, 11)
                .addComponent(lblCardIdMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel18))
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpActivationCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCodeMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(lblNameMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(inpBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBirthdayMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(inpExpiredDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblExpiredDateMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave)
                    .addComponent(btnDeactivate))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Update Card", jPanel8);

        card_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card_idActionPerformed(evt);
            }
        });

        jLabel16.setText("Card ID");

        search_card.setText("Search");
        search_card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_cardActionPerformed(evt);
            }
        });

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(tb);

        jLabel20.setText("Book Borrowing");

        jLabel23.setText("User ID");

        ms.setForeground(new java.awt.Color(255, 51, 51));
        ms.setText("*");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(user_id, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(card_id, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(search_card))
                            .addComponent(jLabel16)))
                    .addComponent(ms, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(342, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_card)
                    .addComponent(user_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(ms)
                .addGap(3, 3, 3)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                .addGap(33, 33, 33))
        );

        jTabbedPane8.addTab("Return Book", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane8)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (jTable1.getRowCount() == 0) {
            jError1.setText("Khong co gi de sua");
            return;
        }

        if (jTextField1.getText().equals("") || jTextField2.getText().equals("")) {
            jError1.setText("Khong duoc bo trong");
        } else {
            try {
                // TODO add your handling code here:
                int status;
                switch (jComboBox1.getSelectedItem().toString()) {
                    case "Available":
                    status = Constants.BOOK_AVAILABLE;
                    break;
                    case "Borrowed":
                    status = Constants.BOOK_BORROWED;
                    break;
                    case "Lent":
                    status = Constants.BOOK_LENT;
                    break;
                    case "Referenced":
                    status = Constants.BOOK_REFERENCED;
                    break;
                    default:
                    status = 0;
                    break;
                }

                int i = updateBorrowedBookInfoController.updateState(Integer.parseInt(jTextField1.getText()),
                    jTextField2.getText(), status);
                System.out.println(i);
                if (i > 0) {
                    showAllBorrowed();
                    showAllCopies();
                    jError1.setText("Update thanh cong");
                }
            } catch (SQLException ex) {
                Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jOk2ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        try {
            if (jNumber2.getText().equals("")) {
                jLabelNumber2.setText("Khong duoc bo trong");
            } else if (jNumberCopies2.getText().equals("")) {
                jLabelNumberCopies2.setText("Khong duoc bo trong");
            } else if (jPrice2.getText().equals("")) {
                jLabelPrice2.setText("Khong duoc bo trong");
            } else {
                int i = 0;
                int type ;
                switch(jType2.getSelectedItem().toString()){
                    case "reference":
                        type = 0;
                        break;
                    case "borrowable":
                        type = 1;
                        break;
                    default :
                        type = 0;
                        break;
                }
                for (int k = 1; k <= Integer.parseInt(jNumberCopies2.getText()); k++) {
                    i = registerNewCopyController.registerNewCopy(jNumber2.getText(), type, Float.parseFloat(jPrice2.getText()));
                }

                if (i > 0) {
                    showAllCopies();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                    

    private void jCancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancel2ActionPerformed
        clearFormRegisterNewCopy();
    }//GEN-LAST:event_jCancel2ActionPerformed

    private void jOk4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOk4ActionPerformed
        try {
            if(updateBookInforController.checkBookNotExist(jNumber4.getText()).equals("ok"))
            if(updateCopyInforController.checkCopyNotExist(jSequenceNumber4.getText(),jNumber4.getText()).equals("ok")) {
                float price = 0;
                if (!jPrice4.getText().equals("")) {
                    price = Float.parseFloat(jPrice4.getText());
                }
                int status = 1;
                int type = 0;
                switch (jStatus4.getSelectedItem().toString()) {
                    case "Available":
                        status = Constants.BOOK_AVAILABLE;
                        break;
                    case "Borrowed":
                        status = Constants.BOOK_BORROWED;
                        break;
                    case "Lent":
                        status = Constants.BOOK_LENT;
                        break;
                    case "Referenced":
                        status = Constants.BOOK_REFERENCED;
                        break;
                    default:
                        status = Constants.BOOK_AVAILABLE;
                        break;
                }
                switch(jType4.getSelectedItem().toString()){
                    case "reference":
                        type = 0;
                        break;
                    case "borrowable":
                        type = 1;
                        break;
                    default :
                        type = 0;
                        break;
                }
                int i = updateCopyInforController.UpdateCopyInfor(Integer.parseInt(jSequenceNumber4.getText()), jNumber4.getText(),type, price, status);
                if (i > 0) {
                    showAllCopies();
                    showAllBorrowed();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jOk4ActionPerformed

    private void jCancel4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        clearFormUpdateCopy();
    }                                        

    private void jStatus3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jNumber3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNumber3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNumber3ActionPerformed

    private void jOk3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOk3ActionPerformed
        try {
            if(updateBookInforController.checkBookNotExist(jNumber3.getText()).equals("ok")){
                int i = 0;
                    int status = 1;
                    
                    try {
                        i = updateBookInforController.UpdateBookInfor(jNumber3.getText(), jTitle3.getText(), jAuthors3.getText(), jPublisher3.getText(), status, jIsbn3.getText());
                    } catch (SQLException ex) {
                        Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(i != 0) showAllBooks();
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jOk3ActionPerformed

    private void jCancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancel3ActionPerformed
        clearFormUpdateBook();
    }//GEN-LAST:event_jCancel3ActionPerformed

    private void jTitle3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTitle3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTitle3ActionPerformed

    private void jAuthors3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAuthors3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAuthors3ActionPerformed

    private void jPublisher3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPublisher3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPublisher3ActionPerformed
    
    private void jOk21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOk21ActionPerformed
        try {
            if(updateBookInforController.checkBookNotExist(jNumber2.getText()).equals("ok")){
            if (jNumberCopies2.getText().equals("")) {
                jLabelNumberCopies2.setText("Khong duoc bo trong");
                jLabelNumber2.setText("");
            }else if(parseInt(jNumberCopies2.getText()) <= 0){
                jLabelNumberCopies2.setText("Không được nhập số âm, số 0 hay không phải kiểu int");
            }else if (jPrice2.getText().equals("")) {
                jLabelPrice2.setText("Khong duoc bo trong");
                jLabelNumber2.setText("");
                jLabelNumberCopies2.setText("");
            }
            else {
                jLabelPrice2.setText("");
                jLabelNumber2.setText("");
                jLabelNumberCopies2.setText("");
                int i = 0;
                int type;
                switch(jType2.getSelectedItem().toString()){
                    case "reference":
                        type = 0;
                        break;
                    case "borrowable":
                        type = 1;
                        break;
                    default :
                        type = 0;
                        break;
                }
                for (int k = 1; k <= Integer.parseInt(jNumberCopies2.getText()); k++) {
                    i = registerNewCopyController.registerNewCopy(jNumber2.getText(), type, Float.parseFloat(jPrice2.getText()));
                }

                if (i > 0) {
                    showAllCopies();
                }
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jOk21ActionPerformed

    private void jBookNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBookNumber1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBookNumber1ActionPerformed


    private void jTableForm1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTableForm1AncestorAdded

    }//GEN-LAST:event_jTableForm1AncestorAdded

    private void jCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancel1ActionPerformed
        clearFormRegisterNewBook();
    }//GEN-LAST:event_jCancel1ActionPerformed

    private void jOK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOK1ActionPerformed
        try {
            if (jBookNumber1.getText().equals("")) {
                jLabelNumber1.setText("Khong duoc bo trong");
            }else if(jBookNumber1.getText().length() != 6){
                jLabelNumber1.setText("Mã sách gồm 6 ký tự");
            }else if(registerNewBookController.checkBook(jBookNumber1.getText()) != null){
                jLabelNumber1.setText("");
            }else if (jTitle1.getText().equals("")) {
                jLabelTitle1.setText("Khong duoc bo trong");
                jLabelNumber1.setText("");
            } else if (jPublisher1.getText().equals("")) {
                jLabelPublisher1.setText("Khong duoc bo trong");
                jLabelTitle1.setText("");
                jLabelNumber1.setText("");
            } else if (jAuthors1.getText().equals("")) {
                jLabelAuthors1.setText("Khong duoc bo trong");
                jLabelPublisher1.setText("");
                jLabelTitle1.setText("");
                jLabelNumber1.setText("");
            } else if (jIsbn1.getText().equals("")) {
                jLabelIsbn1.setText("Khong duoc bo trong");
                jLabelAuthors1.setText("");
                jLabelPublisher1.setText("");
                jLabelTitle1.setText("");
                jLabelNumber1.setText("");
            }else {
                
                    int i = 0;
                    i = registerNewBookController.registerNewBooks(jBookNumber1.getText(), jTitle1.getText(), jPublisher1.getText(), jAuthors1.getText(), jIsbn1.getText());
                if (i != 0) {
                    showAllBooks();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jOK1ActionPerformed

    private void jPublisher1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPublisher1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPublisher1ActionPerformed

    private void jAuthors1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAuthors1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAuthors1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            mBooks = searchBookController.searchBooks(jTextField3.getText());
        } catch (SQLException ex) {
            Logger.getLogger(UserUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel tableModel = new DefaultTableModel(
                new String[]{"Book Number", "Title", "Authors", "ISBN", "Publisher"}, 0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        if (!mBooks.isEmpty()) {
            for (Book book : mBooks) {
                String status;
                switch (book.getStatus()) {
                    case 1:
                        status = "Available";
                        break;
                    case 2:
                        status = "Borrowed";
                        break;
                    case 3:
                        status = "Lent";
                        break;
                    case 4:
                        status = "Referenced";
                        break;
                    default:
                        status = "uhhh";
                        break;
                }
                tableModel.addRow(new Object[]{book.getBookNumber(), book.getTitle(),
                    book.getAuthors(), book.getIsbn(), book.getPublisher()});
            }
        }
        jTable2.setModel(tableModel);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        JTable table = (JTable) evt.getSource();
        int row = table.getSelectedRow();
        try {

            if (jNumber4.getText().equals("") || jSequenceNumber4.getText().equals("")) {
            } else {
                float price = 0;
                if (!jPrice4.getText().equals("")) {
                    price = Float.parseFloat(jPrice4.getText());
                }
                int status = 1;
                int type;
                switch (jStatus4.getSelectedItem().toString()) {
                    case "Available":
                        status = Constants.BOOK_AVAILABLE;
                        break;
                    case "Borrowed":
                        status = Constants.BOOK_BORROWED;
                        break;
                    case "Lent":
                        status = Constants.BOOK_LENT;
                        break;
                    case "Referenced":
                        status = Constants.BOOK_REFERENCED;
                        break;
                    default:
                        status = Constants.BOOK_AVAILABLE;
                        break;
                }
                switch(jType4.getSelectedItem().toString()){
                    case "reference":
                        type = 0;
                        break;
                    case "borrowable":
                        type = 1;
                        break;
                    default :
                        type = 0;
                        break;
                }
                int i = updateCopyInforController.UpdateCopyInfor(Integer.parseInt(jSequenceNumber4.getText()), jNumber4.getText(), type, price, status);
                if (i > 0) {
                    showAllCopies();
                    showAllBorrowed();
                }
            }
            bookController.show((String) table.getValueAt(row, 0));
        } catch (SQLException ex) {
            Logger.getLogger(UserUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jCancel41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancel41ActionPerformed
        clearFormUpdateCopy();
    }//GEN-LAST:event_jCancel41ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (jTable1.getRowCount() == 0) {
            jError1.setText("Không có gì để sửa");
            return;
        }

        if (jTextField1.getText().equals("") || jTextField2.getText().equals("")) {
            jError1.setText("Khong duoc bo trong");
        } else {
            try {
                // TODO add your handling code here:
                int status;
                switch (jComboBox1.getSelectedItem().toString()) {
                    case "Available":
                    status = Constants.BOOK_AVAILABLE;
                    break;
                    case "Borrowed":
                    status = Constants.BOOK_BORROWED;
                    break;
                    case "Lent":
                    status = Constants.BOOK_LENT;
                    break;
                    case "Referenced":
                    status = Constants.BOOK_REFERENCED;
                    break;
                     default:
                    status = 0;
                    break;
                 }

                int i = updateBorrowedBookInfoController.updateState(Integer.parseInt(jTextField1.getText()),
                   jTextField2.getText(), status);
                System.out.println(i);
               if (i > 0) {
                    showAllBorrowed();
                    showAllCopies();
                    jError1.setText("Update thành công");
                }
            } catch (SQLException ex) {
                Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
             }
    }
    }

    /**
     * Hien thi tat ca sach trong db
     * @throws SQLException           neu co loi khi tuong tac voi db
     * @throws ClassNotFoundException neu load class trong connectDb khong thanh cong
     */

    private void showAllBooks() throws SQLException, ClassNotFoundException {
        mBooks = registerNewBookController.getAllBooks();
        if (!mBooks.isEmpty()) {
            DefaultTableModel tableModel = new DefaultTableModel(
                    new String[]{"Book Number", "Title", "Authors", "ISBN", "Publisher"}, 0);
            for (Book book : mBooks) {
                String status;
                switch (book.getStatus()) {
                    case 1:
                        status = "Available";
                        break;
                    case 2:
                        status = "Borrowed";
                        break;
                    case 3:
                        status = "Lent";
                        break;
                    case 4:
                        status = "Referenced";
                        break;
                    default:
                        status = "uhhh";
                        break;
                }
                tableModel.addRow(new Object[]{book.getBookNumber(), book.getTitle(),
                    book.getAuthors(), book.getIsbn(), book.getPublisher()});
            }
            jTableForm1.setModel(tableModel);
            jTableForm3.setModel(tableModel);
        }
    }

    /**
     * Hien thi tat ca copy trong db
     * @throws SQLException           neu co loi khi tuong tac voi db
     * @throws ClassNotFoundException neu load class trong connectDb khong thanh cong
     */

    private void showAllCopies() throws SQLException, ClassNotFoundException {
        mCopies = registerNewCopyController.getAllCopies();
        if (!mCopies.isEmpty()) {
            DefaultTableModel tableModel = new DefaultTableModel(
                    new String[]{"Sequence Number", "Book Number", "TypeOfCopy", "Price", "Status"}, 0);
            for (Copy copy : mCopies) {
                String status;
                String type;
                switch (copy.getStatus()) {
                    case 1:
                        status = "Available";
                        break;
                    case 2:
                        status = "Borrowed";
                        break;
                    case 3:
                        status = "Lent";
                        break;
                    case 4:
                        status = "Referenced";
                        break;
                    default:
                        status = "uhhh";
                        break;
                }
                switch (copy.getTypeOfCopy()) {
                    case "0":
                        type = "reference";
                        break;
                    case "1":
                        type = "borrowable";
                        break;
                    default:
                        type = "reference";
                }
                tableModel.addRow(new Object[]{copy.getBookNumber()+copy.getSequenceNumber(), copy.getBookNumber(),
                    type,copy.getPrice(), status});
            }
            jTableForm2.setModel(tableModel);
            jTableForm4.setModel(tableModel);

        }
    }

    /**
     * Hien thi tat ca sach dang duoc muon
     * @throws SQLException           neu co loi khi tuong tac voi db
     * @throws ClassNotFoundException neu load class trong connectDb khong thanh cong
     */

    private void showAllBorrowed() throws SQLException, ClassNotFoundException {
        List<Copy> copies = updateBorrowedBookInfoController.getBorrowedCopies();
//        if (!copies.isEmpty()) {
        DefaultTableModel tableModel = new DefaultTableModel(
                new String[]{"Sequence Number", "Book Number", "TypeOfCopy", "Price", "Status"}, 0);
        for (Copy copy : copies) {
            String type;

            switch (copy.getTypeOfCopy()) {
                case "0":
                    type = "reference";
                    break;
                case "1":
                    type = "borrowable";
                    break;
                default:
                    type = "reference";
            }
            if (copy.getStatus() == 2) {
                tableModel.addRow(new Object[]{copy.getBookNumber() + copy.getSequenceNumber(), copy.getBookNumber(),
                    type, copy.getPrice(), "Borrowed"});
            }
        }
        jTable1.setModel(tableModel);
    }

    private void jStatus4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStatus4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jStatus4ActionPerformed

    private void jNumberCopies2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNumberCopies2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNumberCopies2ActionPerformed

    private void jNumberCopies2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNumberCopies2KeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_jNumberCopies2KeyTyped

    private void jPrice2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPrice2KeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter)) && !(enter == '.')){
            evt.consume();
        }
    }//GEN-LAST:event_jPrice2KeyTyped

    private void jPrice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrice2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPrice2ActionPerformed

    private void jPrice4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrice4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPrice4ActionPerformed

    private void jPrice4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPrice4KeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter)) && !(enter == '.')){
            evt.consume();
        }
    }//GEN-LAST:event_jPrice4KeyTyped

    private void inpCardIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpCardIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpCardIdActionPerformed

    private void inpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpNameActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int result = 0;
        lblMsg.setForeground(new java.awt.Color(255, 0, 0));
        if (card == null) {
            lblMsg.setText("Nothing to update");
        } else {
            lblMsg.setText("");
            if (inpName.getText().isEmpty()) {
                lblNameMsg.setText("( * )");
            } else lblNameMsg.setText("");
            
            if (inpExpiredDate.getText().isEmpty()) {
                lblExpiredDateMsg.setText("( * )");
                return;
            } else lblExpiredDateMsg.setText("");
            
            
            try {
                result = cardController.update(card.getCardId(),
                        inpName.getText(),
                        inpExpiredDate.getText(),
                        inpBirthday.getText()
                );
            } catch (SQLException | ClassNotFoundException ex) {
                System.out.println("SQLException in update card UI");
                return;
            }
            switch(result){
                case Constants.SUCESS:
//                    lblMsg[3,201,34]
                    lblMsg.setForeground(new java.awt.Color(3, 201, 34));
                    lblMsg.setText("Update success");
//                    btnSearchActionPerformed();
                    break;
                case Constants.ERR_INVALID_DATE:
                    lblMsg.setText("Invalid date.");
                    break;
                default: // update failed
                    lblMsg.setText("Update failed.");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        inpCardId.setFocusable(true);
        card = null;
        inpName.setText("");
        inpActivationCode.setText("");
        inpExpiredDate.setText("");
        inpBirthday.setText("");
        lblMsg.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try {
            if (inpCardId.getText().isEmpty()) {
                lblCardIdMsg.setText("( * )");
                return;
            }
            card = cardController.initInformationForUpdate(inpCardId.getText());
            if (card == null) {
                lblMsg.setText("This Card is not exist.");
                inpName.setText("");
                inpActivationCode.setText("");
                inpExpiredDate.setText("");
                inpBirthday.setText("");
            } else {
                inpCardId.setFocusable(false);
                inpName.setText(card.getName());
                inpActivationCode.setText(card.getActivationCode());
                inpExpiredDate.setText(card.getExpiredDate().toString());
                inpBirthday.setText(card.getBirthday().toString());
                if (card.getStatus() == Constants.ACTIVATED) {
                    btnDeactivate.setText("Deactivate");
                } else btnDeactivate.setText("Activate");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void inpActivationCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpActivationCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpActivationCodeActionPerformed

    private void btnDeactivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeactivateActionPerformed
        try {
            // TODO add your handling code here:
            card = cardController.initInformationForUpdate(inpCardId.getText());
            if (card == null) {
                lblMsg.setText("Nothing to change.");
            } else if (card.getStatus() == Constants.NOT_ACTIVATED) {
                cardController.changeStatus(card.getCardId(), Constants.ACTIVATED);
                btnDeactivate.setText("Deactivate");
            } else {
                cardController.changeStatus(card.getCardId(), Constants.NOT_ACTIVATED);
                btnDeactivate.setText("Activate");
            }
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeactivateActionPerformed

    private void inpBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpBirthdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpBirthdayActionPerformed

    private void jType2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jType2ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jType2ActionPerformed

    private void jIsbn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jIsbn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jIsbn3ActionPerformed

    private void search_cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_cardActionPerformed

        if(card_id.getText().equals("") || user_id.getText().equals("") ){
            ms.setText("Khong duoc bo trong");
        }
        else{
            try {     
                brBooks = showBookBorrowingController.showBookBorrowing(parseInt(card_id.getText()),parseInt(user_id.getText()));
            } catch (SQLException ex) {
                Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (!brBooks.isEmpty()) {
                DefaultTableModel tableModel = new DefaultTableModel(new String[]{"Book Number", "Sequence Number"}, 0);
                for (Registration Book : brBooks) {
                    tableModel.addRow(new Object[]{Book.getBookNumber(),Book.getSequenceNumber()});
                }
                tb.setModel(tableModel);
                
            }
    }//GEN-LAST:event_search_cardActionPerformed
    }
    private void card_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_card_idActionPerformed

//    private void setUsable() throws SQLException, ClassNotFoundException {
//        showAllBorrowed();
//        if (jTable1.getRowCount() == 0) {
//            jComboBox1.setEnabled(false);
//            jTextField1.setEnabled(false);
//            jButton1.setEnabled(false);
//        } else {
//            jComboBox1.setEnabled(true);
//            jTextField1.setEnabled(true);
//            jButton1.setEnabled(true);
//        }
//    }

    /**
     * Clear form dang ky sach moi
     */
    private void clearFormRegisterNewBook() {
        jBookNumber1.setText("");
        jTitle1.setText("");
        jAuthors1.setText("");
        jPublisher1.setText("");
        jIsbn1.setText("");

        jLabelNumber1.setText("");
        jLabelTitle1.setText("");
        jLabelAuthors1.setText("");
        jLabelPublisher1.setText("");
        jLabelIsbn1.setText("");
    }

    /**
     * Clear form dang ky copy moi
     */
    private void clearFormRegisterNewCopy() {
        jNumber2.setText("");
        jNumberCopies2.setText("");
        jPrice2.setText("");

        jLabelNumber2.setText("");
        jLabelNumberCopies2.setText("");
        jLabelPrice2.setText("");
    }

    /**
     * Clear form cap nhat sach
     */
    private void clearFormUpdateBook() {
        jNumber3.setText("");
        jTitle3.setText("");
        jAuthors3.setText("");
        jPublisher3.setText("");
        jIsbn3.setText("");
    }

    /**
     * Clear form cap nhat copy
     */
    private void clearFormUpdateCopy() {
        jNumber4.setText("");
        jSequenceNumber4.setText("");
        jPublisher3.setText("");
        jPrice4.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibrarianUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibrarianUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibrarianUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibrarianUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LibrarianUI().setVisible(true);
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(LibrarianUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeactivate;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JTextField card_id;
    private javax.swing.JTextField inpActivationCode;
    private javax.swing.JTextField inpBirthday;
    private javax.swing.JTextField inpCardId;
    private javax.swing.JTextField inpExpiredDate;
    private javax.swing.JTextField inpName;
    private javax.swing.JTextField jAuthors1;
    private javax.swing.JTextField jAuthors3;
    private javax.swing.JTextField jBookNumber1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jCancel1;
    private javax.swing.JButton jCancel2;
    private javax.swing.JButton jCancel3;
    private javax.swing.JButton jCancel41;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jError1;
    private javax.swing.JTextField jIsbn1;
    private javax.swing.JTextField jIsbn3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAuthors1;
    private javax.swing.JLabel jLabelIsbn1;
    private javax.swing.JLabel jLabelNumber1;
    private javax.swing.JLabel jLabelNumber2;
    private javax.swing.JLabel jLabelNumber3;
    private javax.swing.JLabel jLabelNumberCopies2;
    private javax.swing.JLabel jLabelPrice2;
    private javax.swing.JLabel jLabelPrice4;
    private javax.swing.JLabel jLabelPublisher1;
    private javax.swing.JLabel jLabelStatus4;
    private javax.swing.JLabel jLabelTitle1;
    private javax.swing.JLabel jLabelType4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JTextField jNumber2;
    private javax.swing.JTextField jNumber3;
    private javax.swing.JTextField jNumber4;
    private javax.swing.JTextField jNumberCopies2;
    private javax.swing.JButton jOK1;
    private javax.swing.JButton jOk21;
    private javax.swing.JButton jOk3;
    private javax.swing.JButton jOk4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPrice2;
    private javax.swing.JTextField jPrice4;
    private javax.swing.JTextField jPublisher1;
    private javax.swing.JTextField jPublisher3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jSequenceNumber4;
    private javax.swing.JComboBox<String> jStatus4;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableForm1;
    private javax.swing.JTable jTableForm2;
    private javax.swing.JTable jTableForm3;
    private javax.swing.JTable jTableForm4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTitle1;
    private javax.swing.JTextField jTitle3;
    private javax.swing.JComboBox<String> jType2;
    private javax.swing.JComboBox<String> jType4;
    private javax.swing.JLabel jlable3;
    private javax.swing.JLabel lblBirthdayMsg;
    private javax.swing.JLabel lblCardIdMsg;
    private javax.swing.JLabel lblCodeMsg;
    private javax.swing.JLabel lblExpiredDateMsg;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblNameMsg;
    private javax.swing.JLabel ms;
    private javax.swing.JButton search_card;
    private javax.swing.JTable tb;
    private javax.swing.JTextField user_id;
    // End of variables declaration//GEN-END:variables
}
